{"version":3,"sources":["../node_modules/@material-ui/icons/Close.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","Componentes/Chat/Chat.js"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","ListItemAvatar","forwardRef","props","ref","classes","className","other","context","useContext","root","alignItems","alignItemsFlexStart","minWidth","flexShrink","marginTop","name","useStyles","makeStyles","theme","width","spacing","close","padding","appBar","position","title","marginLeft","flex","avatar","backgroundColor","palette","primary","main","Transition","React","direction","Chat","useState","friends","setFriends","friendisLoading","setFriendisLoading","setSelectedFriend","selectedAvatar","setSelectedAvatar","selectedName","setSelectedName","setSelectedStatus","setChat","setChatIsLoading","dialogEvento","setDialogEvento","handleCloseDialogEvento","useEffect","CometChat","UsersRequestBuilder","setLimit","build","fetchNext","then","userList","error","console","log","removeMessageListener","top","left","color","Fragment","fullScreen","open","onClose","TransitionComponent","edge","onClick","aria-label","src","variant","in","timeout","elevation","map","lista","index","key","button","divider","uid","status","secondary"],"mappings":"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","file":"static/js/16.f87102dd.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  /**\n   * The content of the component â€“ normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { CometChat } from '@cometchat-pro/chat';\r\nimport Box from '@material-ui/core/Box';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\tmarginTop: theme.spacing(10)\r\n\t},\r\n\tclose: {\r\n\t\tpadding: theme.spacing(0.5)\r\n\t},\r\n\tappBar: {\r\n\t\tposition: 'relative'\r\n\t},\r\n\ttitle: {\r\n\t\tmarginLeft: theme.spacing(2),\r\n\t\tflex: 1,\r\n\t},\r\n\tavatar: {\r\n\t\tbackgroundColor: theme.palette.primary.main\r\n\t},\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n\treturn <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Chat() {\r\n\tconst [friends, setFriends] = React.useState([])\r\n\tconst [friendisLoading, setFriendisLoading] = React.useState(true)\r\n\tconst [selectedFriend, setSelectedFriend] = React.useState(null);\r\n\tconst [selectedAvatar, setSelectedAvatar] = React.useState(null);\r\n\tconst [selectedName, setSelectedName] = React.useState(null);\r\n\tconst [selectedStatus, setSelectedStatus] = React.useState(null)\r\n\tconst [chat, setChat] = React.useState([]);\r\n\tconst [chatIsLoading, setChatIsLoading] = React.useState(false)\r\n\tconst [dialogEvento, setDialogEvento] = React.useState(false)\r\n\tconst MESSAGE_LISTENER_KEY = 'listener-key'\r\n\tconst limit = 30\r\n\tconst classes = useStyles()\r\n\r\n\r\n\tconst selectFriend = (uid, avatar, name, status) => {\r\n\t\tsetSelectedFriend(uid);\r\n\t\tsetSelectedAvatar(avatar);\r\n\t\tsetSelectedName(name);\r\n\t\tsetSelectedStatus(status);\r\n\t\tsetChat([]);\r\n\t\tsetChatIsLoading(true);\r\n\t\tsetDialogEvento(true)\r\n\t}\r\n\r\n\tconst handleCloseDialogEvento = () => {\r\n\t\tsetDialogEvento(false);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tlet usersRequest = new CometChat.UsersRequestBuilder()\r\n\t\t\t.setLimit(limit)\r\n\t\t\t.build();\r\n\r\n\t\tusersRequest.fetchNext().then(\r\n\t\t\tuserList => {\r\n\t\t\t\tsetFriends(userList);\r\n\t\t\t\tsetFriendisLoading(false);\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.log('Error al recibir lista: ', error);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn () => {\r\n\t\t\tCometChat.removeMessageListener(MESSAGE_LISTENER_KEY);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tif (friendisLoading) {\r\n\t\treturn (\r\n\t\t\t<Box position=\"absolute\" top=\"50%\" left=\"50%\">\r\n\t\t\t\t<CircularProgress color='primary' />\r\n\t\t\t</Box>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Dialog fullScreen open={dialogEvento} onClose={handleCloseDialogEvento} TransitionComponent={Transition}>\r\n\t\t\t\t\t<AppBar className={classes.appBar}>\r\n\t\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseDialogEvento} aria-label=\"cerrar\">\r\n\t\t\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<Avatar className={classes.avatar} src={selectedAvatar} />\r\n\t\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t\t\t\t{selectedName}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Toolbar>\r\n\t\t\t\t\t</AppBar>\r\n\t\t\t\t</Dialog>\r\n\t\t\t\t<Fade in={true} timeout={1000}>\r\n\t\t\t\t\t<Paper elevation={4} className={classes.root}>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t{friends.map((lista, index) => (\r\n\t\t\t\t\t\t\t\t<ListItem key={index} button divider={true} onClick={() => selectFriend(lista.uid, lista.avatar, lista.name, lista.status)}>\r\n\t\t\t\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar className={classes.avatar} src={lista.avatar} />\r\n\t\t\t\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary={lista.name} secondary={`${lista.uid} - ${lista.status}`} />\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Fade>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}"],"sourceRoot":""}