{"version":3,"sources":["../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","Componentes/Chat/Chat.js"],"names":["ListItemAvatar","forwardRef","props","ref","classes","className","other","context","useContext","createElement","root","alignItems","alignItemsFlexStart","minWidth","flexShrink","marginTop","name","useStyles","makeStyles","theme","width","spacing","avatar","backgroundColor","palette","secondary","main","speedDial","position","bottom","right","back","transform","zIndex","Chat","React","useState","friends","setFriends","friendisLoading","setFriendisLoading","setSelectedFriend","setSelectedAvatar","setSelectedName","setSelectedStatus","setChat","setChatIsLoading","useEffect","CometChat","UsersRequestBuilder","setLimit","build","fetchNext","then","userList","error","console","log","removeMessageListener","top","left","color","Fragment","in","timeout","elevation","map","lista","index","key","button","divider","onClick","uid","status","src","primary"],"mappings":"2GAAA,iEAuBIA,EAAiB,IAAMC,YAAW,SAAwBC,EAAOC,GACnE,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAQ,YAAyBJ,EAAO,CAAC,UAAW,cAEpDK,EAAU,IAAMC,WAAW,KAC/B,OAAO,IAAMC,cAAc,MAAO,YAAS,CACzCJ,UAAW,YAAKD,EAAQM,KAAML,EAAkC,eAAvBE,EAAQI,YAA+BP,EAAQQ,qBACxFT,IAAKA,GACJG,OAmBU,gBA5CK,CAElBI,KAAM,CACJG,SAAU,GACVC,WAAY,GAIdF,oBAAqB,CACnBG,UAAW,IAmCmB,CAChCC,KAAM,qBADO,CAEZhB,I,qNCvCGiB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACtCT,KAAM,CACLU,MAAO,OACPL,UAAWI,EAAME,QAAQ,KAE1BC,OAAQ,CACPC,gBAAiBJ,EAAMK,QAAQC,UAAUC,MAE1CC,UAAW,CACVC,SAAU,QACVC,OAAQV,EAAME,QAAQ,GACtBS,MAAOX,EAAME,QAAQ,IAEtBU,KAAM,CACLC,UAAW,kBACXJ,SAAU,QACVK,OAAQ,SAIK,SAASC,IAAQ,IAAD,EACAC,IAAMC,SAAS,IADf,mBACvBC,EADuB,KACdC,EADc,OAEgBH,IAAMC,UAAS,GAF/B,mBAEvBG,EAFuB,KAENC,EAFM,OAGcL,IAAMC,SAAS,MAH7B,mBAGPK,GAHO,aAIcN,IAAMC,SAAS,MAJ7B,mBAIPM,GAJO,aAKUP,IAAMC,SAAS,MALzB,mBAKTO,GALS,aAMcR,IAAMC,SAAS,MAN7B,mBAMPQ,GANO,aAONT,IAAMC,SAAS,IAPT,mBAOjBS,GAPiB,aAQYV,IAAMC,UAAS,GAR3B,mBAQRU,GARQ,WAWxB1C,EAAUa,IAgChB,OApBAkB,IAAMY,WAAU,WAef,OAdmB,IAAIC,YAAUC,qBAC/BC,SAfW,IAgBXC,QAEWC,YAAYC,MACxB,SAAAC,GACChB,EAAWgB,GACXd,GAAmB,MAEpB,SAAAe,GACCC,QAAQC,IAAI,2BAA4BF,MAInC,WACNP,YAAUU,sBA9BiB,mBAgC1B,IAECnB,EAEF,kBAAC,IAAD,CAAKX,SAAS,WAAW+B,IAAI,MAAMC,KAAK,OACvC,kBAAC,IAAD,CAAkBC,MAAM,aAKzB,kBAAC,IAAMC,SAAP,KACC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMC,IAAI,EAAMC,QAAS,KACxB,kBAAC,IAAD,CAAOC,UAAW,EAAG5D,UAAWD,EAAQM,MACvC,kBAAC,IAAD,KACE2B,EAAQ6B,KAAI,SAACC,EAAOC,GAAR,OACZ,kBAAC,IAAD,CAAUC,IAAKD,EAAOE,QAAM,EAACC,SAAS,EAAMC,QAAS,kBA3CtCC,EA2CyDN,EAAMM,IA3C1DnD,EA2C+D6C,EAAM7C,OA3C7DN,EA2CqEmD,EAAMnD,KA3CrE0D,EA2C2EP,EAAMO,OA1CzHjC,EAAkBgC,GAClB/B,EAAkBpB,GAClBqB,EAAgB3B,GAChB4B,EAAkB8B,GAClB7B,EAAQ,SACRC,GAAiB,GANG,IAAC2B,EAAKnD,EAAQN,EAAM0D,IA4CjC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQrE,UAAWD,EAAQkB,OAAQqD,IAAKR,EAAM7C,UAE/C,kBAAC,IAAD,CAAcsD,QAAST,EAAMnD,KAAMS,UAAS,UAAK0C,EAAMM,IAAX,cAAoBN,EAAMO","file":"static/js/16.429937b8.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  /**\n   * The content of the component â€“ normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { CometChat } from '@cometchat-pro/chat';\r\nimport Box from '@material-ui/core/Box';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\tmarginTop: theme.spacing(10)\r\n\t},\r\n\tavatar: {\r\n\t\tbackgroundColor: theme.palette.secondary.main\r\n\t},\r\n\tspeedDial: {\r\n\t\tposition: 'fixed',\r\n\t\tbottom: theme.spacing(7),\r\n\t\tright: theme.spacing(2),\r\n\t},\r\n\tback: {\r\n\t\ttransform: 'translateZ(0px)',\r\n\t\tposition: 'fixed',\r\n\t\tzIndex: 100\r\n\t},\r\n}));\r\n\r\nexport default function Chat() {\r\n\tconst [friends, setFriends] = React.useState([])\r\n\tconst [friendisLoading, setFriendisLoading] = React.useState(true)\r\n\tconst [selectedFriend, setSelectedFriend] = React.useState(null);\r\n\tconst [selectedAvatar, setSelectedAvatar] = React.useState(null);\r\n\tconst [selectedName, setSelectedName] = React.useState(null);\r\n\tconst [selectedStatus, setSelectedStatus] = React.useState(null);\r\n\tconst [chat, setChat] = React.useState([]);\r\n\tconst [chatIsLoading, setChatIsLoading] = React.useState(false);\r\n\tconst MESSAGE_LISTENER_KEY = 'listener-key'\r\n\tconst limit = 30\r\n\tconst classes = useStyles()\r\n\r\n\r\n\tconst selectFriend = (uid, avatar, name, status) => {\r\n\t\tsetSelectedFriend(uid);\r\n\t\tsetSelectedAvatar(avatar);\r\n\t\tsetSelectedName(name);\r\n\t\tsetSelectedStatus(status);\r\n\t\tsetChat([]);\r\n\t\tsetChatIsLoading(true);\r\n\t}\r\n\r\n\tReact.useEffect(() => {\r\n\t\tlet usersRequest = new CometChat.UsersRequestBuilder()\r\n\t\t\t.setLimit(limit)\r\n\t\t\t.build();\r\n\r\n\t\tusersRequest.fetchNext().then(\r\n\t\t\tuserList => {\r\n\t\t\t\tsetFriends(userList);\r\n\t\t\t\tsetFriendisLoading(false);\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.log('Error al recibir lista: ', error);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn () => {\r\n\t\t\tCometChat.removeMessageListener(MESSAGE_LISTENER_KEY);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tif (friendisLoading) {\r\n\t\treturn (\r\n\t\t\t<Box position=\"absolute\" top=\"50%\" left=\"50%\">\r\n\t\t\t\t<CircularProgress color='primary' />\r\n\t\t\t</Box>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Fade in={true} timeout={1000}>\r\n\t\t\t\t\t<Paper elevation={4} className={classes.root}>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t{friends.map((lista, index) => (\r\n\t\t\t\t\t\t\t\t<ListItem key={index} button divider={true} onClick={() => selectFriend(lista.uid, lista.avatar, lista.name, lista.status)}>\r\n\t\t\t\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar className={classes.avatar} src={lista.avatar} />\r\n\t\t\t\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary={lista.name} secondary={`${lista.uid} - ${lista.status}`} />\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Fade>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}"],"sourceRoot":""}