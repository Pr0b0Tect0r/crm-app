{"version":3,"sources":["../node_modules/@material-ui/icons/Photo.js","Componentes/Clientes/Nuevo.js"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","theme","root","marginTop","spacing","marginBottom","padding","breakpoints","up","layout","width","marginLeft","marginRight","speedDial","position","bottom","right","back","transform","zIndex","card","margin","avatar","backgroundColor","palette","secondary","main","height","texto","info","input","display","cabecera","title","flex","boton","actions","name","Nuevo","props","React","useState","open","setOpen","denei","setDenei","ruc","setRuc","informacion1","setInformacion1","informacion2","setInformacion2","imagenAvatar","setImagenAvatar","tipo","telefonos","setTelefonos","arrayTelefono","setArrayTelefono","correos","setCorreos","arrayCorreo","setArrayCorreo","redes","setRedes","arrayRedes","setArrayRedes","pais","direccion","setDireccion","arrayDireccion","setArrayDireccion","dialogDireccion","setDialogDireccion","classes","perfil","JSON","parse","localStorage","getItem","tecla","e","a","keyCode","fetch","method","headers","then","respuesta","json","teclaRuc","onChangeTelefonos","target","onChangeCorreos","onChangeRedes","onChangeDireccion","Fragment","className","elevation","fullWidth","onClose","disableTypography","variant","xsDown","container","item","xs","direction","sm","select","label","required","onChange","type","placeholder","smUp","color","onClick","ariaLabel","icon","onOpen","map","action","key","tooltipTitle","history","push","alert","autoFocus","onKeyDown","helperText","sx","accept","id","event","files","includes","size","URL","createObjectURL","htmlFor","in","timeout","src","picture","component","startIcon","apellidoPaterno","apellidoMaterno","nombres","razonSocial","aria-label","length","drc","index","primary","direccion1","direccion2","distrito","provincia","i","splice","style","cursor","numero","tlf","crr","nombre","red"],"mappings":"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","file":"static/js/17.689d482a.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"\n}), 'Photo');\n\nexports.default = _default;","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ArrowBackOutlinedIcon from '@material-ui/icons/ArrowBackOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport DomainIcon from '@material-ui/icons/Domain';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PhoneAndroidOutlinedIcon from '@material-ui/icons/PhoneAndroidOutlined';\r\nimport MailOutlineOutlinedIcon from '@material-ui/icons/MailOutlineOutlined';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(12),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 1000,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    speedDial: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(7),\r\n        right: theme.spacing(2),\r\n    },\r\n    back: {\r\n        transform: 'translateZ(0px)',\r\n        position: 'fixed',\r\n        zIndex: 100\r\n    },\r\n    card: {\r\n        width: 400,\r\n        margin: theme.spacing(5)\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        width: 70,\r\n        height: 70\r\n    },\r\n    texto: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    info: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    cabecera: {\r\n        position: 'relative',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n    boton: {\r\n        marginTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\n\r\nconst actions = [\r\n    { name: 'Volver' },\r\n    { name: 'Guardar' }\r\n];\r\n\r\nexport default function Nuevo(props) {\r\n    const [open, setOpen] = React.useState(false)\r\n    const [denei, setDenei] = React.useState('')\r\n    const [ruc, setRuc] = React.useState('')\r\n    const [informacion1, setInformacion1] = React.useState({})\r\n    const [informacion2, setInformacion2] = React.useState({})\r\n    const [imagenAvatar, setImagenAvatar] = React.useState('')\r\n    const [telefonos, setTelefonos] = React.useState({ tipo: 'personal' })\r\n    const [arrayTelefono, setArrayTelefono] = React.useState([])\r\n    const [correos, setCorreos] = React.useState({ tipo: 'personal' })\r\n    const [arrayCorreo, setArrayCorreo] = React.useState([])\r\n    const [redes, setRedes] = React.useState({ tipo: 'facebook' })\r\n    const [arrayRedes, setArrayRedes] = React.useState([])\r\n    const [direccion, setDireccion] = React.useState({ tipo: 'casa', pais: 'peru' })\r\n    const [arrayDireccion, setArrayDireccion] = React.useState([])\r\n    // const [empresas, setEmpresas] = React.useState([])\r\n    const [dialogDireccion, setDialogDireccion] = React.useState(false)\r\n    const classes = useStyles()\r\n    const perfil = JSON.parse(localStorage.getItem('perfilGoogle'))\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleCloseButton = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        setDenei(e.target.value)\r\n    }\r\n\r\n    const onChangeRuc = (e) => {\r\n        setRuc(e.target.value)\r\n    }\r\n\r\n    const tecla = async (e) => {\r\n        if (e.keyCode === 13) {\r\n            if (typeof denei === 'undefined') {\r\n\r\n            } else {\r\n                await fetch(`https://dniruc.apisperu.com/api/v1/dni/${denei}?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6InByb2dyYW1hZG9yQGdudC5wZSJ9.h0kKyOThfiofLhCBJIctabYiQb7dWpk_kOe0hVwUR4g`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        \"Content-type\": \"application/json; charset=UTF-8\"\r\n                    }\r\n                }).then(respuesta => {\r\n                    return respuesta.json()\r\n                }).then(json => {\r\n                    setInformacion1(json)\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const teclaRuc = async (e) => {\r\n        if (e.keyCode === 13) {\r\n            if (typeof ruc === 'undefined') {\r\n\r\n            } else {\r\n                await fetch(`https://dniruc.apisperu.com/api/v1/ruc/${ruc}?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6InByb2dyYW1hZG9yQGdudC5wZSJ9.h0kKyOThfiofLhCBJIctabYiQb7dWpk_kOe0hVwUR4g`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        \"Content-type\": \"application/json; charset=UTF-8\"\r\n                    }\r\n                }).then(respuesta => {\r\n                    return respuesta.json()\r\n                }).then(json => {\r\n                    setInformacion2(json)\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    // const agregarEmpresa = () => {\r\n    //     setEmpresas([...empresas, { razonSocial: informacion2.razonSocial }])\r\n    // }\r\n\r\n    // const eliminarEmpresa = (i) => {\r\n    //     setEmpresas(empresas.splice(i))\r\n    // }\r\n\r\n    const onChangeTelefonos = (e) => {\r\n        setTelefonos({\r\n            ...telefonos,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const agregarTelefono = () => {\r\n        setArrayTelefono([...arrayTelefono, telefonos])\r\n    }\r\n\r\n    const eliminarTelefono = (i) => {\r\n        setArrayTelefono(arrayTelefono.splice(i))\r\n    }\r\n\r\n    const onChangeCorreos = (e) => {\r\n        setCorreos({\r\n            ...correos,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const agregarCorreo = () => {\r\n        setArrayCorreo([...arrayCorreo, correos])\r\n    }\r\n\r\n    const eliminarCorreo = (i) => {\r\n        setArrayCorreo(arrayCorreo.splice(i))\r\n    }\r\n\r\n    const onChangeRedes = (e) => {\r\n        setRedes({\r\n            ...redes,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const agregarRedes = () => {\r\n        setArrayRedes([...arrayRedes, redes])\r\n    }\r\n\r\n    const eliminarRedes = (i) => {\r\n        setArrayRedes(arrayRedes.splice(i))\r\n    }\r\n\r\n    const onChangeDireccion = (e) => {\r\n        setDireccion({\r\n            ...direccion,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const agregarDireccion = () => {\r\n        setArrayDireccion([...arrayDireccion, direccion])\r\n        setDialogDireccion(false)\r\n    }\r\n\r\n    const eliminarDireccion = (i) => {\r\n        setArrayDireccion(arrayDireccion.splice(i))\r\n    }\r\n\r\n    const handleAvatarChange = (event) => {\r\n        if (!event) {\r\n            return;\r\n        }\r\n\r\n        const files = event.target.files;\r\n\r\n        if (!files) {\r\n            return;\r\n        }\r\n\r\n        const avatar = files[0];\r\n\r\n        if (!avatar) {\r\n            return;\r\n        }\r\n\r\n        const fileTypes = [\r\n            'image/gif',\r\n            'image/jpeg',\r\n            'image/png',\r\n            'image/webp',\r\n            'image/svg+xml'\r\n        ];\r\n\r\n        if (!fileTypes.includes(avatar.type)) {\r\n            return;\r\n        }\r\n\r\n        if (avatar.size > (20 * 1024 * 1024)) {\r\n            return;\r\n        }\r\n\r\n        setImagenAvatar(URL.createObjectURL(avatar))\r\n\r\n        // this.setState({\r\n        //     avatar: avatar,\r\n        //     avatarUrl: URL.createObjectURL(avatar)\r\n        // }, () => {\r\n        //     this.props.openSnackbar(`Selected image “${avatar.name}”`, 5);\r\n        // });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <main className={classes.layout}>\r\n                <Paper elevation={4} className={classes.root}>\r\n                    <Dialog fullWidth open={dialogDireccion} onClose={() => setDialogDireccion(false)}>\r\n                        <DialogTitle disableTypography>\r\n                            <Paper elevation={24}>\r\n                                <AppBar className={classes.cabecera}>\r\n                                    <Toolbar variant='dense'>\r\n                                        <Typography variant=\"button\" className={classes.title}>\r\n                                            Agregar dirección\r\n\t\t\t\t\t\t</Typography>\r\n                                        <HomeOutlinedIcon />\r\n                                    </Toolbar>\r\n                                </AppBar>\r\n                            </Paper>\r\n                        </DialogTitle>\r\n\r\n                        <DialogContent>\r\n                            <Hidden xsDown>\r\n                                <Grid container spacing={1}>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container direction=\"column\" spacing={2}>\r\n                                            <Grid item sm={6}>\r\n                                                <TextField\r\n                                                    name='tipo'\r\n                                                    select\r\n                                                    value={direccion.tipo}\r\n                                                    fullWidth\r\n                                                    label=\"Tipo\"\r\n                                                    required\r\n                                                    onChange={onChangeDireccion}\r\n                                                    type=\"text\"\r\n                                                >\r\n                                                    <MenuItem value='casa'>Casa</MenuItem>\r\n                                                    <MenuItem value='trabajo'>Trabajo</MenuItem>\r\n                                                </TextField>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <TextField\r\n                                                    name='direccion1'\r\n                                                    fullWidth\r\n                                                    label=\"Dirección 1\"\r\n                                                    placeholder=\"Av- ejemplo #número\"\r\n                                                    required\r\n                                                    onChange={onChangeDireccion}\r\n                                                    type=\"text\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item >\r\n                                                <TextField\r\n                                                    name='direccion2'\r\n                                                    fullWidth\r\n                                                    label=\"Dirección 2\"\r\n                                                    placeholder=\"Urb ejemplo\"\r\n                                                    required\r\n                                                    onChange={onChangeDireccion}\r\n                                                    type=\"text\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <TextField\r\n                                                    name='pais'\r\n                                                    select\r\n                                                    value={direccion.pais}\r\n                                                    fullWidth\r\n                                                    label=\"País\"\r\n                                                    required\r\n                                                    onChange={onChangeDireccion}\r\n                                                    type=\"text\"\r\n                                                >\r\n                                                    <MenuItem value='peru'>Perú</MenuItem>\r\n                                                    <MenuItem value='eua'>Estados Unidos</MenuItem>\r\n                                                    <MenuItem value='italia'>Italia</MenuItem>\r\n                                                </TextField>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <TextField\r\n                                                    name='departamento'\r\n                                                    fullWidth\r\n                                                    label=\"Departamento\"\r\n                                                    placeholder=\"Lima\"\r\n                                                    required\r\n                                                    onChange={onChangeDireccion}\r\n                                                    type=\"text\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item >\r\n                                                <TextField\r\n                                                    name='provincia'\r\n                                                    fullWidth\r\n                                                    label=\"Provincia\"\r\n                                                    placeholder=\"Lima\"\r\n                                                    required\r\n                                                    onChange={onChangeDireccion}\r\n                                                    type=\"text\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item >\r\n                                                <TextField\r\n                                                    name='distrito'\r\n                                                    fullWidth\r\n                                                    label=\"Distrito\"\r\n                                                    placeholder=\"Miraflores\"\r\n                                                    required\r\n                                                    onChange={onChangeDireccion}\r\n                                                    type=\"text\"\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Hidden>\r\n                            <Hidden smUp>\r\n                                <Grid container direction=\"column\" spacing={2}>\r\n                                    <Grid item sm={6}>\r\n                                        <TextField\r\n                                            name='tipo'\r\n                                            select\r\n                                            value={direccion.tipo}\r\n                                            fullWidth\r\n                                            label=\"Tipo\"\r\n                                            required\r\n                                            onChange={onChangeDireccion}\r\n                                            type=\"text\"\r\n                                        >\r\n                                            <MenuItem value='casa'>Casa</MenuItem>\r\n                                            <MenuItem value='trabajo'>Trabajo</MenuItem>\r\n                                        </TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <TextField\r\n                                            name='direccion1'\r\n                                            fullWidth\r\n                                            label=\"Dirección 1\"\r\n                                            placeholder=\"Av- ejemplo #número\"\r\n                                            required\r\n                                            onChange={onChangeDireccion}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <TextField\r\n                                            name='direccion2'\r\n                                            fullWidth\r\n                                            label=\"Dirección 2\"\r\n                                            placeholder=\"Urb ejemplo\"\r\n                                            required\r\n                                            onChange={onChangeDireccion}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <TextField\r\n                                            name='pais'\r\n                                            select\r\n                                            value={direccion.pais}\r\n                                            fullWidth\r\n                                            label=\"País\"\r\n                                            required\r\n                                            onChange={onChangeDireccion}\r\n                                            type=\"text\"\r\n                                        >\r\n                                            <MenuItem value='peru'>Perú</MenuItem>\r\n                                            <MenuItem value='eua'>Estados Unidos</MenuItem>\r\n                                            <MenuItem value='italia'>Italia</MenuItem>\r\n                                        </TextField>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TextField\r\n                                            name='departamento'\r\n                                            fullWidth\r\n                                            label=\"Departamento\"\r\n                                            placeholder=\"Lima\"\r\n                                            required\r\n                                            onChange={onChangeDireccion}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item >\r\n                                        <TextField\r\n                                            name='provincia'\r\n                                            fullWidth\r\n                                            label=\"Provincia\"\r\n                                            placeholder=\"Lima\"\r\n                                            required\r\n                                            onChange={onChangeDireccion}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item >\r\n                                        <TextField\r\n                                            name='distrito'\r\n                                            fullWidth\r\n                                            label=\"Distrito\"\r\n                                            placeholder=\"Miraflores\"\r\n                                            required\r\n                                            onChange={onChangeDireccion}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Hidden>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"secondary\" onClick={() => setDialogDireccion(false)}>Cerrar</Button>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={() => agregarDireccion()}\r\n                                variant=\"contained\">\r\n                                Guardar\r\n                    </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Backdrop open={open} className={classes.back} />\r\n                    <SpeedDial\r\n                        ariaLabel=\"SpeedDial tooltip example\"\r\n                        className={classes.speedDial}\r\n                        icon={<MenuIcon />}\r\n                        onClose={handleCloseButton}\r\n                        onOpen={handleOpen}\r\n                        open={open}>\r\n\r\n                        {actions.map(action => (\r\n                            <SpeedDialAction\r\n                                key={action.name}\r\n                                icon={action.name === 'Volver' ? <ArrowBackOutlinedIcon /> : action.name === 'Guardar' ? <SaveOutlinedIcon /> : ''}\r\n                                tooltipTitle={action.name}\r\n                                onClick={action.name === 'Volver' ? () => props.history.push('/clientes') : action.name === 'Guardar' ? () => alert('guardado') : ''}\r\n                            />\r\n                        ))}\r\n                    </SpeedDial>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h6\">\r\n                                Información personal\r\n\t\t\t\t\t\t    </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                name='dni'\r\n                                value={denei}\r\n                                margin='normal'\r\n                                autoFocus\r\n                                fullWidth\r\n                                label=\"DNI\"\r\n                                onChange={onChange}\r\n                                onKeyDown={tecla}\r\n                                placeholder=\"Ingrese dni\"\r\n                                helperText='presione enter'\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item sx={12} sm={3}>\r\n                            <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={handleAvatarChange} />\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                {imagenAvatar ?\r\n                                    <Zoom in={true} timeout={500}>\r\n                                        <Avatar className={classes.avatar} src={imagenAvatar === '' ? perfil.picture : imagenAvatar} />\r\n                                    </Zoom>\r\n                                    : <Button color=\"primary\" component=\"span\" startIcon={<PhotoIcon />} variant=\"contained\" className={classes.boton}>\r\n                                        Subir...\r\n                                </Button>}\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                name='apellidoPaterno'\r\n                                value={informacion1.apellidoPaterno}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                helperText=\"Apellido paterno\"\r\n                                placeholder=\"Ingrese apellido paterno\"\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                name='apellidoMaterno'\r\n                                value={informacion1.apellidoMaterno}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                helperText=\"Apellido materno\"\r\n                                placeholder=\"Ingrese apellido materno\"\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                name='nombres'\r\n                                value={informacion1.nombres}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                helperText=\"nombres\"\r\n                                placeholder=\"Ingrese nombres\"\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                name='fechanacimiento'\r\n                                margin='normal'\r\n                                fullWidth\r\n                                helperText=\"Fecha de nacimiento\"\r\n                                placeholder=\"Ingrese fecha de nacimiento\"\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} />\r\n                    </Grid>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                name='ruc'\r\n                                value={ruc}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                label=\"RUC\"\r\n                                onChange={onChangeRuc}\r\n                                onKeyDown={teclaRuc}\r\n                                placeholder=\"Ingrese Ruc\"\r\n                                helperText='presione enter'\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={9} />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                name='razonSocial'\r\n                                value={informacion2.razonSocial}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                helperText=\"Razón social\"\r\n                                placeholder=\"Ingrese razón social\"\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        {/* <Grid item xs={12} sm={3}>\r\n                            <Fab color='secondary' size='small' aria-label='agregar' onClick={() => agregarEmpresa()}>\r\n                                <AddIcon />\r\n                            </Fab>\r\n                        </Grid> */}\r\n                        <Grid item xs={12} sm={6} />\r\n                        <Divider />\r\n                        {/* <Grid item xs={12} sm={12}>\r\n                            <List>\r\n                                {empresas.length > 0 ?\r\n                                    empresas.map((empresa, index) => (\r\n                                        <ListItem key={index}>\r\n                                            <ListItemAvatar>\r\n                                                <DomainIcon color='secondary' />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={empresa.razonSocial} />\r\n                                            <DeleteOutlineOutlinedIcon color='error' onClick={() => eliminarEmpresa(index)} style={{ cursor: 'pointer' }} />\r\n                                        </ListItem>\r\n                                    ))\r\n                                    :\r\n                                    <ListItem>\r\n                                        <ListItemText primary='No hay empresas agregada' />\r\n                                    </ListItem>\r\n                                }\r\n                            </List>\r\n                            <Divider />\r\n                        </Grid> */}\r\n                    </Grid>\r\n                    <Grid container spacing={2}>\r\n                    <Divider />\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h6\">\r\n                                Direcciones\r\n\t\t\t\t\t\t    </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Fab color='secondary' size='small' className={classes.texto} aria-label='agregar' onClick={() => setDialogDireccion(true)}>\r\n                                <HomeOutlinedIcon />\r\n                            </Fab>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <List>\r\n                                {arrayDireccion.length > 0 ?\r\n                                    arrayDireccion.map((drc, index) => (\r\n                                        <ListItem key={index}>\r\n                                            <ListItemAvatar>\r\n                                                <DomainIcon color='secondary' />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={`${drc.direccion1}, ${drc.direccion2}`} secondary={`${drc.distrito}, ${drc.provincia}, ${drc.pais}`} />\r\n                                            <DeleteOutlineOutlinedIcon color='error' onClick={() => eliminarDireccion(index)} style={{ cursor: 'pointer' }} />\r\n                                        </ListItem>\r\n                                    ))\r\n                                    :\r\n                                    <ListItem>\r\n                                        <ListItemText primary='No hay números agregados' />\r\n                                    </ListItem>\r\n                                }\r\n                            </List>\r\n                            <Divider />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h6\">\r\n                                Teléfonos\r\n\t\t\t\t\t\t    </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                name='numero'\r\n                                value={telefonos.numero}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                label=\"Teléfono\"\r\n                                onChange={onChangeTelefonos}\r\n                                placeholder=\"Ingrese número de teléfono\"\r\n                                helperText='número de teléfono'\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                select\r\n                                className={classes.texto}\r\n                                name='tipo'\r\n                                value={telefonos.tipo}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                onChange={onChangeTelefonos}\r\n                                helperText='Tipo'\r\n                                type=\"text\"\r\n                            >\r\n                                <MenuItem value='personal'>Personal</MenuItem>\r\n                                <MenuItem value='trabajo'>Trabajo</MenuItem>\r\n                                <MenuItem value='fijo'>Fijo</MenuItem>\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Fab color='secondary' size='small' className={classes.texto} aria-label='agregar' onClick={() => agregarTelefono()}>\r\n                                <AddIcon />\r\n                            </Fab>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <List>\r\n                                {arrayTelefono.length > 0 ?\r\n                                    arrayTelefono.map((tlf, index) => (\r\n                                        <ListItem key={index}>\r\n                                            <ListItemAvatar>\r\n                                                <PhoneAndroidOutlinedIcon color='secondary' />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={tlf.numero} secondary={tlf.tipo} />\r\n                                            <CallOutlinedIcon color='primary' onClick={() => alert('llamando a ' + tlf.numero)} style={{ cursor: 'pointer' }} />\r\n                                            <DeleteOutlineOutlinedIcon color='error' onClick={() => eliminarTelefono(index)} style={{ cursor: 'pointer' }} />\r\n                                        </ListItem>\r\n                                    ))\r\n                                    :\r\n                                    <ListItem>\r\n                                        <ListItemText primary='No hay números agregados' />\r\n                                    </ListItem>\r\n                                }\r\n                            </List>\r\n                            <Divider />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h6\">\r\n                                Correos\r\n\t\t\t\t\t\t    </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                name='direccion'\r\n                                value={correos.direccion}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                label=\"Correo\"\r\n                                onChange={onChangeCorreos}\r\n                                placeholder=\"Ingrese dirección de correo\"\r\n                                helperText='Dirección de correo'\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                select\r\n                                className={classes.texto}\r\n                                name='tipo'\r\n                                value={correos.tipo}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                onChange={onChangeCorreos}\r\n                                helperText='Tipo'\r\n                                type=\"text\"\r\n                            >\r\n                                <MenuItem value='personal'>Personal</MenuItem>\r\n                                <MenuItem value='trabajo'>Trabajo</MenuItem>\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Fab color='secondary' size='small' className={classes.texto} aria-label='agregar' onClick={() => agregarCorreo()}>\r\n                                <AddIcon />\r\n                            </Fab>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <List>\r\n                                {arrayCorreo.length > 0 ?\r\n                                    arrayCorreo.map((crr, index) => (\r\n                                        <ListItem key={index}>\r\n                                            <ListItemAvatar>\r\n                                                <MailOutlineOutlinedIcon color='secondary' />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={crr.direccion} secondary={crr.tipo} />\r\n                                            <DeleteOutlineOutlinedIcon color='error' onClick={() => eliminarCorreo(index)} style={{ cursor: 'pointer' }} />\r\n                                        </ListItem>\r\n                                    ))\r\n                                    :\r\n                                    <ListItem>\r\n                                        <ListItemText primary='No hay correos agregados' />\r\n                                    </ListItem>\r\n                                }\r\n                            </List>\r\n                            <Divider />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h6\">\r\n                                Redes sociales\r\n\t\t\t\t\t\t    </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                name='nombre'\r\n                                value={redes.nombre}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                label=\"Red social\"\r\n                                onChange={onChangeRedes}\r\n                                placeholder=\"Ingrese red social\"\r\n                                helperText='Red social'\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                select\r\n                                className={classes.texto}\r\n                                name='tipo'\r\n                                value={redes.tipo}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                onChange={onChangeRedes}\r\n                                helperText='Tipo'\r\n                                type=\"text\"\r\n                            >\r\n                                <MenuItem value='facebook'>Facebook</MenuItem>\r\n                                <MenuItem value='instagram'>Instagram</MenuItem>\r\n                                <MenuItem value='twitter'>Twitter</MenuItem>\r\n                                <MenuItem value='linkedin'>Linkedin</MenuItem>\r\n                                <MenuItem value='youtube'>Youtube</MenuItem>\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Fab color='secondary' size='small' className={classes.texto} aria-label='agregar' onClick={() => agregarRedes()}>\r\n                                <AddIcon />\r\n                            </Fab>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <List>\r\n                                {arrayRedes.length > 0 ?\r\n                                    arrayRedes.map((red, index) => (\r\n                                        <ListItem key={index}>\r\n                                            <ListItemAvatar>\r\n                                                {red.tipo === 'instagram' ? <InstagramIcon color='error' /> :\r\n                                                    red.tipo === 'facebook' ? <FacebookIcon color='primary' /> :\r\n                                                        red.tipo === 'twitter' ? <TwitterIcon color='primary' /> :\r\n                                                            red.tipo === 'linkedin' ? <LinkedInIcon /> :\r\n                                                                red.tipo === 'youtube' ? <YouTubeIcon color='error' /> : ''}\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={red.nombre} secondary={red.tipo} />\r\n                                            <DeleteOutlineOutlinedIcon color='error' onClick={() => eliminarRedes(index)} style={{ cursor: 'pointer' }} />\r\n                                        </ListItem>\r\n                                    ))\r\n                                    :\r\n                                    <ListItem>\r\n                                        <ListItemText primary='No hay red social agregada' />\r\n                                    </ListItem>\r\n                                }\r\n                            </List>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n}"],"sourceRoot":""}