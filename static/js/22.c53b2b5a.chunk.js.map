{"version":3,"sources":["Componentes/Empresas/Nuevo.js"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","marginBottom","padding","breakpoints","up","layout","width","marginLeft","marginRight","speedDial","position","bottom","right","back","transform","zIndex","card","margin","avatar","backgroundColor","palette","secondary","main","height","texto","info","input","display","cabecera","title","flex","actions","name","Nuevo","props","React","useState","open","setOpen","ruc","setRuc","tipo","selectRuc","setSelectRuc","informacion2","setInformacion2","telefonos","setTelefonos","arrayTelefono","setArrayTelefono","correos","setCorreos","arrayCorreo","setArrayCorreo","redes","setRedes","arrayRedes","setArrayRedes","pais","direccion","setDireccion","arrayDireccion","setArrayDireccion","dialogDireccion","setDialogDireccion","classes","teclaRuc","e","a","keyCode","fetch","method","headers","then","respuesta","json","onChangeTelefonos","target","value","onChangeCorreos","onChangeRedes","onChangeDireccion","Fragment","className","elevation","variant","color","fullWidth","onClose","disableTypography","xsDown","container","item","xs","direction","sm","select","label","required","onChange","type","autoFocus","placeholder","smUp","onClick","ariaLabel","icon","onOpen","map","action","key","tooltipTitle","history","push","alert","helperText","onKeyDown","razonSocial","size","aria-label","length","drc","index","primary","direccion1","direccion2","distrito","provincia","i","splice","style","cursor","numero","tlf","crr","nombre","red"],"mappings":"oxCAyCA,IAAMA,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,aACDC,UAAWF,EAAMG,QAAQ,GACzBC,aAAcJ,EAAMG,QAAQ,GAC5BE,QAASL,EAAMG,QAAQ,IACtBH,EAAMM,YAAYC,GAAG,IAAyB,EAAnBP,EAAMG,QAAQ,IAAU,CAChDD,UAAWF,EAAMG,QAAQ,GACzBC,aAAcJ,EAAMG,QAAQ,GAC5BE,QAASL,EAAMG,QAAQ,KAG/BK,OAAO,aACHC,MAAO,OACPC,WAAYV,EAAMG,QAAQ,GAC1BQ,YAAaX,EAAMG,QAAQ,GAC3BD,UAAWF,EAAMG,QAAQ,KACxBH,EAAMM,YAAYC,GAAG,IAAyB,EAAnBP,EAAMG,QAAQ,IAAU,CAChDM,MAAO,IACPC,WAAY,OACZC,YAAa,SAGrBC,UAAW,CACPC,SAAU,QACVC,OAAQd,EAAMG,QAAQ,GACtBY,MAAOf,EAAMG,QAAQ,IAEzBa,KAAM,CACFC,UAAW,kBACXJ,SAAU,QACVK,OAAQ,KAEZC,KAAM,CACFV,MAAO,IACPW,OAAQpB,EAAMG,QAAQ,IAE1BkB,OAAQ,CACJC,gBAAiBtB,EAAMuB,QAAQC,UAAUC,KACzChB,MAAO,GACPiB,OAAQ,GACRN,OAAQ,QAEZO,MAAO,CACHzB,UAAWF,EAAMG,QAAQ,IAE7ByB,KAAM,CACF1B,UAAWF,EAAMG,QAAQ,IAE7B0B,MAAO,CACHC,QAAS,QAEbC,SAAU,CACNlB,SAAU,WACVX,UAAWF,EAAMG,QAAQ,IAE7B6B,MAAO,CACHtB,WAAYV,EAAMG,QAAQ,GAC1B8B,KAAM,OAKRC,GAAU,CACZ,CAAEC,KAAM,UACR,CAAEA,KAAM,YAGG,SAASC,GAAMC,GAAQ,IAAD,EACTC,IAAMC,UAAS,GADN,mBAC1BC,EAD0B,KACpBC,EADoB,OAEXH,IAAMC,SAAS,IAFJ,mBAE1BG,EAF0B,KAErBC,EAFqB,OAGCL,IAAMC,SAAS,CAAEK,KAAM,QAHxB,mBAG1BC,EAH0B,KAGfC,EAHe,OAIOR,IAAMC,SAAS,IAJtB,mBAI1BQ,EAJ0B,KAIZC,EAJY,OAKCV,IAAMC,SAAS,CAAEK,KAAM,aALxB,mBAK1BK,GAL0B,KAKfC,GALe,QAMSZ,IAAMC,SAAS,IANxB,qBAM1BY,GAN0B,MAMXC,GANW,SAOHd,IAAMC,SAAS,CAAEK,KAAM,aAPpB,qBAO1BS,GAP0B,MAOjBC,GAPiB,SAQKhB,IAAMC,SAAS,IARpB,qBAQ1BgB,GAR0B,MAQbC,GARa,SASPlB,IAAMC,SAAS,CAAEK,KAAM,aAThB,qBAS1Ba,GAT0B,MASnBC,GATmB,SAUGpB,IAAMC,SAAS,IAVlB,qBAU1BoB,GAV0B,MAUdC,GAVc,SAWCtB,IAAMC,SAAS,CAAEK,KAAM,OAAQiB,KAAM,SAXtC,qBAW1BC,GAX0B,MAWfC,GAXe,SAYWzB,IAAMC,SAAS,IAZ1B,qBAY1ByB,GAZ0B,MAYVC,GAZU,SAaa3B,IAAMC,UAAS,GAb5B,qBAa1B2B,GAb0B,MAaTC,GAbS,MAc3BC,GAAUtE,KAcVuE,GAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACK,KAAdD,EAAEE,QADO,mBAEU,qBAAR9B,EAFF,sDAKC+B,MAAM,0CAAD,OAA2C/B,EAA3C,oIAAkL,CACzLgC,OAAQ,MACRC,QAAS,CACL,eAAgB,qCAErBC,MAAK,SAAAC,GACJ,OAAOA,EAAUC,UAClBF,MAAK,SAAAE,GACJ9B,EAAgB8B,MAbf,2CAAH,sDAmBRC,GAAoB,SAACT,GACvBpB,GAAa,GAAD,GACLD,GADK,eAEPqB,EAAEU,OAAO7C,KAAOmC,EAAEU,OAAOC,UAY5BC,GAAkB,SAACZ,GACrBhB,GAAW,GAAD,GACHD,GADG,eAELiB,EAAEU,OAAO7C,KAAOmC,EAAEU,OAAOC,UAY5BE,GAAgB,SAACb,GACnBZ,GAAS,GAAD,GACDD,GADC,eAEHa,EAAEU,OAAO7C,KAAOmC,EAAEU,OAAOC,UAY5BG,GAAoB,SAACd,GACvBP,GAAa,GAAD,GACLD,GADK,eAEPQ,EAAEU,OAAO7C,KAAOmC,EAAEU,OAAOC,UAoBlC,OACI,kBAAC,IAAMI,SAAP,KACI,kBAAC,IAAD,MACA,0BAAMC,UAAWlB,GAAQ5D,QACrB,kBAAC,IAAD,CAAO+E,UAAW,EAAGD,UAAWlB,GAAQnE,MACpC,kBAAC,IAAD,CAAYuF,QAAQ,KAAKC,MAAM,eAA/B,iBACA,kBAAC,KAAD,CAAQC,WAAS,EAAClD,KAAM0B,GAAiByB,QAAS,kBAAMxB,IAAmB,KACvE,kBAAC,KAAD,CAAayB,mBAAiB,GAC1B,kBAAC,IAAD,CAAOL,UAAW,IACd,kBAAC,IAAD,CAAQD,UAAWlB,GAAQrC,UACvB,kBAAC,IAAD,CAASyD,QAAQ,SACb,kBAAC,IAAD,CAAYA,QAAQ,SAASF,UAAWlB,GAAQpC,OAAhD,wBAGA,kBAAC,KAAD,UAMhB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAQ6D,QAAM,GACV,kBAAC,IAAD,CAAMC,WAAS,EAAC3F,QAAS,GACrB,kBAAC,IAAD,CAAM4F,MAAI,EAACC,GAAI,IACX,kBAAC,IAAD,CAAMF,WAAS,EAACG,UAAU,SAAS9F,QAAS,GACxC,kBAAC,IAAD,CAAM4F,MAAI,EAACG,GAAI,GACX,kBAAC,IAAD,CACI/D,KAAK,OACLgE,QAAM,EACNlB,MAAOnB,GAAUlB,KACjB8C,WAAS,EACTU,MAAM,OACNC,UAAQ,EACRC,SAAUlB,GACVmB,KAAK,QAEL,kBAAC,IAAD,CAAUtB,MAAM,QAAhB,QACA,kBAAC,IAAD,CAAUA,MAAM,WAAhB,aAGR,kBAAC,IAAD,CAAMc,MAAI,GACN,kBAAC,IAAD,CACI5D,KAAK,aACLqE,WAAS,EACTd,WAAS,EACTU,MAAM,iBACNK,YAAY,yBACZJ,UAAQ,EACRC,SAAUlB,GACVmB,KAAK,UAGb,kBAAC,IAAD,CAAMR,MAAI,GACN,kBAAC,IAAD,CACI5D,KAAK,aACLuD,WAAS,EACTU,MAAM,iBACNK,YAAY,cACZJ,UAAQ,EACRC,SAAUlB,GACVmB,KAAK,UAGb,kBAAC,IAAD,CAAMR,MAAI,GACN,kBAAC,IAAD,CACI5D,KAAK,OACLgE,QAAM,EACNlB,MAAOnB,GAAUD,KACjB6B,WAAS,EACTU,MAAM,UACNC,UAAQ,EACRC,SAAUlB,GACVmB,KAAK,QAEL,kBAAC,IAAD,CAAUtB,MAAM,QAAhB,WACA,kBAAC,IAAD,CAAUA,MAAM,OAAhB,kBACA,kBAAC,IAAD,CAAUA,MAAM,UAAhB,YAGR,kBAAC,IAAD,CAAMc,MAAI,GACN,kBAAC,IAAD,CACI5D,KAAK,eACLuD,WAAS,EACTU,MAAM,eACNK,YAAY,OACZJ,UAAQ,EACRC,SAAUlB,GACVmB,KAAK,UAGb,kBAAC,IAAD,CAAMR,MAAI,GACN,kBAAC,IAAD,CACI5D,KAAK,YACLuD,WAAS,EACTU,MAAM,YACNK,YAAY,OACZJ,UAAQ,EACRC,SAAUlB,GACVmB,KAAK,UAGb,kBAAC,IAAD,CAAMR,MAAI,GACN,kBAAC,IAAD,CACI5D,KAAK,WACLuD,WAAS,EACTU,MAAM,WACNK,YAAY,aACZJ,UAAQ,EACRC,SAAUlB,GACVmB,KAAK,cAO7B,kBAAC,KAAD,CAAQG,MAAI,GACR,kBAAC,IAAD,CAAMZ,WAAS,EAACG,UAAU,SAAS9F,QAAS,GACxC,kBAAC,IAAD,CAAM4F,MAAI,EAACG,GAAI,GACX,kBAAC,IAAD,CACI/D,KAAK,OACLgE,QAAM,EACNlB,MAAOnB,GAAUlB,KACjB8C,WAAS,EACTU,MAAM,OACNC,UAAQ,EACRC,SAAUlB,GACVmB,KAAK,QAEL,kBAAC,IAAD,CAAUtB,MAAM,QAAhB,QACA,kBAAC,IAAD,CAAUA,MAAM,WAAhB,aAGR,kBAAC,IAAD,CAAMc,MAAI,EAACC,IAAE,GACT,kBAAC,IAAD,CACI7D,KAAK,aACLqE,WAAS,EACTd,WAAS,EACTU,MAAM,iBACNK,YAAY,yBACZJ,UAAQ,EACRC,SAAUlB,GACVmB,KAAK,UAGb,kBAAC,IAAD,CAAMR,MAAI,EAACC,IAAE,GACT,kBAAC,IAAD,CACI7D,KAAK,aACLuD,WAAS,EACTU,MAAM,iBACNK,YAAY,cACZJ,UAAQ,EACRC,SAAUlB,GACVmB,KAAK,UAGb,kBAAC,IAAD,CAAMR,MAAI,EAACC,IAAE,GACT,kBAAC,IAAD,CACI7D,KAAK,OACLgE,QAAM,EACNlB,MAAOnB,GAAUD,KACjB6B,WAAS,EACTU,MAAM,UACNC,UAAQ,EACRC,SAAUlB,GACVmB,KAAK,QAEL,kBAAC,IAAD,CAAUtB,MAAM,QAAhB,WACA,kBAAC,IAAD,CAAUA,MAAM,OAAhB,kBACA,kBAAC,IAAD,CAAUA,MAAM,UAAhB,YAGR,kBAAC,IAAD,CAAMc,MAAI,GACN,kBAAC,IAAD,CACI5D,KAAK,eACLuD,WAAS,EACTU,MAAM,eACNK,YAAY,OACZJ,UAAQ,EACRC,SAAUlB,GACVmB,KAAK,UAGb,kBAAC,IAAD,CAAMR,MAAI,GACN,kBAAC,IAAD,CACI5D,KAAK,YACLuD,WAAS,EACTU,MAAM,YACNK,YAAY,OACZJ,UAAQ,EACRC,SAAUlB,GACVmB,KAAK,UAGb,kBAAC,IAAD,CAAMR,MAAI,GACN,kBAAC,IAAD,CACI5D,KAAK,WACLuD,WAAS,EACTU,MAAM,WACNK,YAAY,aACZJ,UAAQ,EACRC,SAAUlB,GACVmB,KAAK,aAMzB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAQd,MAAM,YAAYkB,QAAS,kBAAMxC,IAAmB,KAA5D,UACA,kBAAC,KAAD,CACIsB,MAAM,UACNkB,QAAS,kBAnOjC1C,GAAkB,GAAD,mBAAKD,IAAL,CAAqBF,WACtCK,IAAmB,IAmOKqB,QAAQ,aAHZ,aAQR,kBAAC,IAAD,CAAUhD,KAAMA,EAAM8C,UAAWlB,GAAQpD,OACzC,kBAAC,IAAD,CACI4F,UAAU,4BACVtB,UAAWlB,GAAQxD,UACnBiG,KAAM,kBAAC,IAAD,MACNlB,QA9TM,WACtBlD,GAAQ,IA8TQqE,OAnUD,WACfrE,GAAQ,IAmUQD,KAAMA,GAELN,GAAQ6E,KAAI,SAAAC,GAAM,OACf,kBAAC,IAAD,CACIC,IAAKD,EAAO7E,KACZ0E,KAAsB,WAAhBG,EAAO7E,KAAoB,kBAAC,IAAD,MAA4C,YAAhB6E,EAAO7E,KAAqB,kBAAC,KAAD,MAAuB,GAChH+E,aAAcF,EAAO7E,KACrBwE,QAAyB,WAAhBK,EAAO7E,KAAoB,kBAAME,EAAM8E,QAAQC,KAAK,cAA+B,YAAhBJ,EAAO7E,KAAqB,kBAAMkF,MAAM,aAAc,SAI9I,kBAAC,IAAD,CAAMvB,WAAS,EAAC3F,QAAS,GACrB,kBAAC,IAAD,CAAM4F,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAAC,IAAD,CACIC,QAAM,EACNb,UAAWlB,GAAQzC,MACnBQ,KAAK,OACL8C,MAAOpC,EAAUD,KACjBxB,OAAO,SACPsE,WAAS,EACTY,SA5PL,SAAChC,GACpBxB,EAAa,GAAD,GACLD,EADK,eAEPyB,EAAEU,OAAO7C,KAAOmC,EAAEU,OAAOC,UA0PNqC,WAAW,OACXf,KAAK,QAEL,kBAAC,IAAD,CAAUtB,MAAM,OAAhB,OACA,kBAAC,IAAD,CAAUA,MAAM,SAAhB,SACA,kBAAC,IAAD,CAAUA,MAAM,OAAhB,SAGR,kBAAC,IAAD,CAAMc,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAAC,IAAD,CACI/D,KAAK,MACL8C,MAAOvC,EACPtB,OAAO,SACPoF,WAAS,EACTd,WAAS,EACTU,MAAM,MACNE,SAjWR,SAAChC,GACjB3B,EAAO2B,EAAEU,OAAOC,QAiWQsC,UAAWlD,GACXoC,YAAY,cACZa,WAAW,iBACXf,KAAK,UAGb,kBAAC,IAAD,CAAMR,MAAI,EAACC,GAAI,GAAIE,GAAI,IACvB,kBAAC,IAAD,CAAMH,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAAC,IAAD,CACI/D,KAAK,cACL8C,MAAOlC,EAAayE,YACpBpG,OAAO,SACPsE,WAAS,EACT4B,WAAW,kBACXb,YAAY,0BACZF,KAAK,UAGb,kBAAC,IAAD,CAAMR,MAAI,EAACC,GAAI,GAAIE,GAAI,IACvB,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CAAMJ,WAAS,EAAC3F,QAAS,GACrB,kBAAC,IAAD,CAAM4F,MAAI,EAACC,GAAI,IACX,kBAAC,IAAD,CAAYR,QAAQ,MAApB,gBAIJ,kBAAC,IAAD,CAAMO,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAAC,IAAD,CAAKT,MAAM,YAAYgC,KAAK,QAAQnC,UAAWlB,GAAQzC,MAAO+F,aAAW,UAAUf,QAAS,kBAAMxC,IAAmB,KACjH,kBAAC,KAAD,QAGR,kBAAC,IAAD,CAAM4B,MAAI,EAACC,GAAI,GAAIE,GAAI,IACnB,kBAAC,IAAD,KACKlC,GAAe2D,OAAS,EACrB3D,GAAe+C,KAAI,SAACa,EAAKC,GAAN,OACf,kBAAC,IAAD,CAAUZ,IAAKY,GACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYpC,MAAM,eAEtB,kBAAC,IAAD,CAAcqC,QAAO,UAAKF,EAAIG,WAAT,aAAwBH,EAAII,YAAcxG,UAAS,UAAKoG,EAAIK,SAAT,aAAsBL,EAAIM,UAA1B,aAAwCN,EAAI/D,QACpH,kBAAC,IAAD,CAA2B4B,MAAM,QAAQkB,QAAS,kBA3T/DwB,EA2TuFN,OA1T9G5D,GAAkBD,GAAeoE,OAAOD,IADlB,IAACA,GA2T+FE,MAAO,CAAEC,OAAQ,iBAI3G,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAcR,QAAQ,kCAIlC,kBAAC,IAAD,QAGR,kBAAC,IAAD,CAAMhC,WAAS,EAAC3F,QAAS,GACrB,kBAAC,IAAD,CAAM4F,MAAI,EAACC,GAAI,IACX,kBAAC,IAAD,CAAYR,QAAQ,MAApB,iBAIJ,kBAAC,IAAD,CAAMO,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAAC,IAAD,CACI/D,KAAK,SACL8C,MAAOhC,GAAUsF,OACjBnH,OAAO,SACPsE,WAAS,EACTU,MAAM,cACNE,SAAUvB,GACV0B,YAAY,mCACZa,WAAW,2BACXf,KAAK,UAGb,kBAAC,IAAD,CAAMR,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAAC,IAAD,CACIC,QAAM,EACNb,UAAWlB,GAAQzC,MACnBQ,KAAK,OACL8C,MAAOhC,GAAUL,KACjBxB,OAAO,SACPsE,WAAS,EACTY,SAAUvB,GACVuC,WAAW,OACXf,KAAK,QAEL,kBAAC,IAAD,CAAUtB,MAAM,YAAhB,YACA,kBAAC,IAAD,CAAUA,MAAM,WAAhB,WACA,kBAAC,IAAD,CAAUA,MAAM,QAAhB,UAGR,kBAAC,IAAD,CAAMc,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAAC,IAAD,CAAKT,MAAM,YAAYgC,KAAK,QAAQnC,UAAWlB,GAAQzC,MAAO+F,aAAW,UAAUf,QAAS,WA7ZhHvD,GAAiB,GAAD,mBAAKD,IAAL,CAAoBF,QA8ZZ,kBAAC,IAAD,QAGR,kBAAC,IAAD,CAAM8C,MAAI,EAACC,GAAI,GAAIE,GAAI,IACnB,kBAAC,IAAD,KACK/C,GAAcwE,OAAS,EACpBxE,GAAc4D,KAAI,SAACyB,EAAKX,GAAN,OACd,kBAAC,IAAD,CAAUZ,IAAKY,GACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAA0BpC,MAAM,eAEpC,kBAAC,IAAD,CAAcqC,QAASU,EAAID,OAAQ/G,UAAWgH,EAAI5F,OAClD,kBAAC,KAAD,CAAkB6C,MAAM,UAAUkB,QAAS,kBAAMU,MAAM,cAAgBmB,EAAID,SAASF,MAAO,CAAEC,OAAQ,aACrG,kBAAC,IAAD,CAA2B7C,MAAM,QAAQkB,QAAS,kBAxahEwB,EAwauFN,OAva7GzE,GAAiBD,GAAciF,OAAOD,IADjB,IAACA,GAwa+FE,MAAO,CAAEC,OAAQ,iBAI1G,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAcR,QAAQ,kCAIlC,kBAAC,IAAD,QAGR,kBAAC,IAAD,CAAMhC,WAAS,EAAC3F,QAAS,GACrB,kBAAC,IAAD,CAAM4F,MAAI,EAACC,GAAI,IACX,kBAAC,IAAD,CAAYR,QAAQ,MAApB,YAIJ,kBAAC,IAAD,CAAMO,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAAC,IAAD,CACI/D,KAAK,YACL8C,MAAO5B,GAAQS,UACf1C,OAAO,SACPsE,WAAS,EACTU,MAAM,SACNE,SAAUpB,GACVuB,YAAY,iCACZa,WAAW,yBACXf,KAAK,UAGb,kBAAC,IAAD,CAAMR,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAAC,IAAD,CACIC,QAAM,EACNb,UAAWlB,GAAQzC,MACnBQ,KAAK,OACL8C,MAAO5B,GAAQT,KACfxB,OAAO,SACPsE,WAAS,EACTY,SAAUpB,GACVoC,WAAW,OACXf,KAAK,QAEL,kBAAC,IAAD,CAAUtB,MAAM,YAAhB,YACA,kBAAC,IAAD,CAAUA,MAAM,WAAhB,aAGR,kBAAC,IAAD,CAAMc,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAAC,IAAD,CAAKT,MAAM,YAAYgC,KAAK,QAAQnC,UAAWlB,GAAQzC,MAAO+F,aAAW,UAAUf,QAAS,WA5chHnD,GAAe,GAAD,mBAAKD,IAAL,CAAkBF,QA6cR,kBAAC,IAAD,QAGR,kBAAC,IAAD,CAAM0C,MAAI,EAACC,GAAI,GAAIE,GAAI,IACnB,kBAAC,IAAD,KACK3C,GAAYoE,OAAS,EAClBpE,GAAYwD,KAAI,SAAC0B,EAAKZ,GAAN,OACZ,kBAAC,IAAD,CAAUZ,IAAKY,GACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAyBpC,MAAM,eAEnC,kBAAC,IAAD,CAAcqC,QAASW,EAAI3E,UAAWtC,UAAWiH,EAAI7F,OACrD,kBAAC,IAAD,CAA2B6C,MAAM,QAAQkB,QAAS,kBAtdlEwB,EAsduFN,OArd3GrE,GAAeD,GAAY6E,OAAOD,IADf,IAACA,GAsd+FE,MAAO,CAAEC,OAAQ,iBAIxG,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAcR,QAAQ,+BAIlC,kBAAC,IAAD,QAGR,kBAAC,IAAD,CAAMhC,WAAS,EAAC3F,QAAS,GACrB,kBAAC,IAAD,CAAM4F,MAAI,EAACC,GAAI,IACX,kBAAC,IAAD,CAAYR,QAAQ,MAApB,mBAIJ,kBAAC,IAAD,CAAMO,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAAC,IAAD,CACI/D,KAAK,SACL8C,MAAOxB,GAAMiF,OACbtH,OAAO,SACPsE,WAAS,EACTU,MAAM,aACNE,SAAUnB,GACVsB,YAAY,qBACZa,WAAW,aACXf,KAAK,UAGb,kBAAC,IAAD,CAAMR,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAAC,IAAD,CACIC,QAAM,EACNb,UAAWlB,GAAQzC,MACnBQ,KAAK,OACL8C,MAAOxB,GAAMb,KACbxB,OAAO,SACPsE,WAAS,EACTY,SAAUnB,GACVmC,WAAW,OACXf,KAAK,QAEL,kBAAC,IAAD,CAAUtB,MAAM,YAAhB,YACA,kBAAC,IAAD,CAAUA,MAAM,aAAhB,aACA,kBAAC,IAAD,CAAUA,MAAM,WAAhB,WACA,kBAAC,IAAD,CAAUA,MAAM,YAAhB,YACA,kBAAC,IAAD,CAAUA,MAAM,WAAhB,aAGR,kBAAC,IAAD,CAAMc,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAAC,IAAD,CAAKT,MAAM,YAAYgC,KAAK,QAAQnC,UAAWlB,GAAQzC,MAAO+F,aAAW,UAAUf,QAAS,WA7fhH/C,GAAc,GAAD,mBAAKD,IAAL,CAAiBF,QA8fN,kBAAC,IAAD,QAGR,kBAAC,IAAD,CAAMsC,MAAI,EAACC,GAAI,GAAIE,GAAI,IACnB,kBAAC,IAAD,KACKvC,GAAWgE,OAAS,EACjBhE,GAAWoD,KAAI,SAAC4B,EAAKd,GAAN,OACX,kBAAC,IAAD,CAAUZ,IAAKY,GACX,kBAAC,IAAD,KACkB,cAAbc,EAAI/F,KAAuB,kBAAC,IAAD,CAAe6C,MAAM,UAChC,aAAbkD,EAAI/F,KAAsB,kBAAC,IAAD,CAAc6C,MAAM,YAC7B,YAAbkD,EAAI/F,KAAqB,kBAAC,IAAD,CAAa6C,MAAM,YAC3B,aAAbkD,EAAI/F,KAAsB,kBAAC,IAAD,MACT,YAAb+F,EAAI/F,KAAqB,kBAAC,IAAD,CAAa6C,MAAM,UAAa,IAE7E,kBAAC,IAAD,CAAcqC,QAASa,EAAID,OAAQlH,UAAWmH,EAAI/F,OAClD,kBAAC,IAAD,CAA2B6C,MAAM,QAAQkB,QAAS,kBA3gBnEwB,EA2gBuFN,OA1gB1GjE,GAAcD,GAAWyE,OAAOD,IADd,IAACA,GA2gB+FE,MAAO,CAAEC,OAAQ,iBAIvG,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAcR,QAAQ","file":"static/js/22.c53b2b5a.chunk.js","sourcesContent":["import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ArrowBackOutlinedIcon from '@material-ui/icons/ArrowBackOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport DomainIcon from '@material-ui/icons/Domain';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PhoneAndroidOutlinedIcon from '@material-ui/icons/PhoneAndroidOutlined';\r\nimport MailOutlineOutlinedIcon from '@material-ui/icons/MailOutlineOutlined';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(12),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 1000,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    speedDial: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(7),\r\n        right: theme.spacing(2),\r\n    },\r\n    back: {\r\n        transform: 'translateZ(0px)',\r\n        position: 'fixed',\r\n        zIndex: 100\r\n    },\r\n    card: {\r\n        width: 400,\r\n        margin: theme.spacing(5)\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        width: 70,\r\n        height: 70,\r\n        margin: 'auto'\r\n    },\r\n    texto: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    info: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    cabecera: {\r\n        position: 'relative',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    }\r\n}));\r\n\r\n\r\nconst actions = [\r\n    { name: 'Volver' },\r\n    { name: 'Guardar' }\r\n];\r\n\r\nexport default function Nuevo(props) {\r\n    const [open, setOpen] = React.useState(false)\r\n    const [ruc, setRuc] = React.useState('')\r\n    const [selectRuc, setSelectRuc] = React.useState({ tipo: 'ruc' })\r\n    const [informacion2, setInformacion2] = React.useState({})\r\n    const [telefonos, setTelefonos] = React.useState({ tipo: 'personal' })\r\n    const [arrayTelefono, setArrayTelefono] = React.useState([])\r\n    const [correos, setCorreos] = React.useState({ tipo: 'personal' })\r\n    const [arrayCorreo, setArrayCorreo] = React.useState([])\r\n    const [redes, setRedes] = React.useState({ tipo: 'facebook' })\r\n    const [arrayRedes, setArrayRedes] = React.useState([])\r\n    const [direccion, setDireccion] = React.useState({ tipo: 'casa', pais: 'peru' })\r\n    const [arrayDireccion, setArrayDireccion] = React.useState([])\r\n    const [dialogDireccion, setDialogDireccion] = React.useState(false)\r\n    const classes = useStyles()\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleCloseButton = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const onChangeRuc = (e) => {\r\n        setRuc(e.target.value)\r\n    }\r\n\r\n    const teclaRuc = async (e) => {\r\n        if (e.keyCode === 13) {\r\n            if (typeof ruc === 'undefined') {\r\n\r\n            } else {\r\n                await fetch(`https://dniruc.apisperu.com/api/v1/ruc/${ruc}?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6InByb2dyYW1hZG9yQGdudC5wZSJ9.h0kKyOThfiofLhCBJIctabYiQb7dWpk_kOe0hVwUR4g`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        \"Content-type\": \"application/json; charset=UTF-8\"\r\n                    }\r\n                }).then(respuesta => {\r\n                    return respuesta.json()\r\n                }).then(json => {\r\n                    setInformacion2(json)\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangeTelefonos = (e) => {\r\n        setTelefonos({\r\n            ...telefonos,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const agregarTelefono = () => {\r\n        setArrayTelefono([...arrayTelefono, telefonos])\r\n    }\r\n\r\n    const eliminarTelefono = (i) => {\r\n        setArrayTelefono(arrayTelefono.splice(i))\r\n    }\r\n\r\n    const onChangeCorreos = (e) => {\r\n        setCorreos({\r\n            ...correos,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const agregarCorreo = () => {\r\n        setArrayCorreo([...arrayCorreo, correos])\r\n    }\r\n\r\n    const eliminarCorreo = (i) => {\r\n        setArrayCorreo(arrayCorreo.splice(i))\r\n    }\r\n\r\n    const onChangeRedes = (e) => {\r\n        setRedes({\r\n            ...redes,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const agregarRedes = () => {\r\n        setArrayRedes([...arrayRedes, redes])\r\n    }\r\n\r\n    const eliminarRedes = (i) => {\r\n        setArrayRedes(arrayRedes.splice(i))\r\n    }\r\n\r\n    const onChangeDireccion = (e) => {\r\n        setDireccion({\r\n            ...direccion,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const agregarDireccion = () => {\r\n        setArrayDireccion([...arrayDireccion, direccion])\r\n        setDialogDireccion(false)\r\n    }\r\n\r\n    const eliminarDireccion = (i) => {\r\n        setArrayDireccion(arrayDireccion.splice(i))\r\n    }\r\n\r\n    const onchangeSelect = (e) => {\r\n        setSelectRuc({\r\n            ...selectRuc,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <main className={classes.layout}>\r\n                <Paper elevation={4} className={classes.root}>\r\n                    <Typography variant='h6' color='textPrimary'  >Nueva empresa</Typography>\r\n                    <Dialog fullWidth open={dialogDireccion} onClose={() => setDialogDireccion(false)}>\r\n                        <DialogTitle disableTypography>\r\n                            <Paper elevation={24}>\r\n                                <AppBar className={classes.cabecera}>\r\n                                    <Toolbar variant='dense'>\r\n                                        <Typography variant=\"button\" className={classes.title}>\r\n                                            Agregar dirección\r\n\t\t\t\t\t\t</Typography>\r\n                                        <HomeOutlinedIcon />\r\n                                    </Toolbar>\r\n                                </AppBar>\r\n                            </Paper>\r\n                        </DialogTitle>\r\n\r\n                        <DialogContent>\r\n                            <Hidden xsDown>\r\n                                <Grid container spacing={1}>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container direction=\"column\" spacing={2}>\r\n                                            <Grid item sm={6}>\r\n                                                <TextField\r\n                                                    name='tipo'\r\n                                                    select\r\n                                                    value={direccion.tipo}\r\n                                                    fullWidth\r\n                                                    label=\"Tipo\"\r\n                                                    required\r\n                                                    onChange={onChangeDireccion}\r\n                                                    type=\"text\"\r\n                                                >\r\n                                                    <MenuItem value='casa'>Casa</MenuItem>\r\n                                                    <MenuItem value='trabajo'>Trabajo</MenuItem>\r\n                                                </TextField>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <TextField\r\n                                                    name='direccion1'\r\n                                                    autoFocus\r\n                                                    fullWidth\r\n                                                    label=\"Dirección 1\"\r\n                                                    placeholder=\"Av- ejemplo #número\"\r\n                                                    required\r\n                                                    onChange={onChangeDireccion}\r\n                                                    type=\"text\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item >\r\n                                                <TextField\r\n                                                    name='direccion2'\r\n                                                    fullWidth\r\n                                                    label=\"Dirección 2\"\r\n                                                    placeholder=\"Urb ejemplo\"\r\n                                                    required\r\n                                                    onChange={onChangeDireccion}\r\n                                                    type=\"text\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <TextField\r\n                                                    name='pais'\r\n                                                    select\r\n                                                    value={direccion.pais}\r\n                                                    fullWidth\r\n                                                    label=\"País\"\r\n                                                    required\r\n                                                    onChange={onChangeDireccion}\r\n                                                    type=\"text\"\r\n                                                >\r\n                                                    <MenuItem value='peru'>Perú</MenuItem>\r\n                                                    <MenuItem value='eua'>Estados Unidos</MenuItem>\r\n                                                    <MenuItem value='italia'>Italia</MenuItem>\r\n                                                </TextField>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <TextField\r\n                                                    name='departamento'\r\n                                                    fullWidth\r\n                                                    label=\"Departamento\"\r\n                                                    placeholder=\"Lima\"\r\n                                                    required\r\n                                                    onChange={onChangeDireccion}\r\n                                                    type=\"text\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item >\r\n                                                <TextField\r\n                                                    name='provincia'\r\n                                                    fullWidth\r\n                                                    label=\"Provincia\"\r\n                                                    placeholder=\"Lima\"\r\n                                                    required\r\n                                                    onChange={onChangeDireccion}\r\n                                                    type=\"text\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item >\r\n                                                <TextField\r\n                                                    name='distrito'\r\n                                                    fullWidth\r\n                                                    label=\"Distrito\"\r\n                                                    placeholder=\"Miraflores\"\r\n                                                    required\r\n                                                    onChange={onChangeDireccion}\r\n                                                    type=\"text\"\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Hidden>\r\n                            <Hidden smUp>\r\n                                <Grid container direction=\"column\" spacing={2}>\r\n                                    <Grid item sm={6}>\r\n                                        <TextField\r\n                                            name='tipo'\r\n                                            select\r\n                                            value={direccion.tipo}\r\n                                            fullWidth\r\n                                            label=\"Tipo\"\r\n                                            required\r\n                                            onChange={onChangeDireccion}\r\n                                            type=\"text\"\r\n                                        >\r\n                                            <MenuItem value='casa'>Casa</MenuItem>\r\n                                            <MenuItem value='trabajo'>Trabajo</MenuItem>\r\n                                        </TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <TextField\r\n                                            name='direccion1'\r\n                                            autoFocus\r\n                                            fullWidth\r\n                                            label=\"Dirección 1\"\r\n                                            placeholder=\"Av- ejemplo #número\"\r\n                                            required\r\n                                            onChange={onChangeDireccion}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <TextField\r\n                                            name='direccion2'\r\n                                            fullWidth\r\n                                            label=\"Dirección 2\"\r\n                                            placeholder=\"Urb ejemplo\"\r\n                                            required\r\n                                            onChange={onChangeDireccion}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <TextField\r\n                                            name='pais'\r\n                                            select\r\n                                            value={direccion.pais}\r\n                                            fullWidth\r\n                                            label=\"País\"\r\n                                            required\r\n                                            onChange={onChangeDireccion}\r\n                                            type=\"text\"\r\n                                        >\r\n                                            <MenuItem value='peru'>Perú</MenuItem>\r\n                                            <MenuItem value='eua'>Estados Unidos</MenuItem>\r\n                                            <MenuItem value='italia'>Italia</MenuItem>\r\n                                        </TextField>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TextField\r\n                                            name='departamento'\r\n                                            fullWidth\r\n                                            label=\"Departamento\"\r\n                                            placeholder=\"Lima\"\r\n                                            required\r\n                                            onChange={onChangeDireccion}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item >\r\n                                        <TextField\r\n                                            name='provincia'\r\n                                            fullWidth\r\n                                            label=\"Provincia\"\r\n                                            placeholder=\"Lima\"\r\n                                            required\r\n                                            onChange={onChangeDireccion}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item >\r\n                                        <TextField\r\n                                            name='distrito'\r\n                                            fullWidth\r\n                                            label=\"Distrito\"\r\n                                            placeholder=\"Miraflores\"\r\n                                            required\r\n                                            onChange={onChangeDireccion}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Hidden>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"secondary\" onClick={() => setDialogDireccion(false)}>Cerrar</Button>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={() => agregarDireccion()}\r\n                                variant=\"contained\">\r\n                                Guardar\r\n                    </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Backdrop open={open} className={classes.back} />\r\n                    <SpeedDial\r\n                        ariaLabel=\"SpeedDial tooltip example\"\r\n                        className={classes.speedDial}\r\n                        icon={<MenuIcon />}\r\n                        onClose={handleCloseButton}\r\n                        onOpen={handleOpen}\r\n                        open={open}>\r\n\r\n                        {actions.map(action => (\r\n                            <SpeedDialAction\r\n                                key={action.name}\r\n                                icon={action.name === 'Volver' ? <ArrowBackOutlinedIcon /> : action.name === 'Guardar' ? <SaveOutlinedIcon /> : ''}\r\n                                tooltipTitle={action.name}\r\n                                onClick={action.name === 'Volver' ? () => props.history.push('/empresas') : action.name === 'Guardar' ? () => alert('guardado') : ''}\r\n                            />\r\n                        ))}\r\n                    </SpeedDial>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                select\r\n                                className={classes.texto}\r\n                                name='tipo'\r\n                                value={selectRuc.tipo}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                onChange={onchangeSelect}\r\n                                helperText='Tipo'\r\n                                type=\"text\"\r\n                            >\r\n                                <MenuItem value='ruc'>RUC</MenuItem>\r\n                                <MenuItem value='otros'>OTROS</MenuItem>\r\n                                <MenuItem value='dni'>DNI</MenuItem>\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                name='ruc'\r\n                                value={ruc}\r\n                                margin='normal'\r\n                                autoFocus\r\n                                fullWidth\r\n                                label=\"RUC\"\r\n                                onChange={onChangeRuc}\r\n                                onKeyDown={teclaRuc}\r\n                                placeholder=\"Ingrese Ruc\"\r\n                                helperText='presione enter'\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                name='razonSocial'\r\n                                value={informacion2.razonSocial}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                helperText=\"Razón social\"\r\n                                placeholder=\"Ingrese razón social\"\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} />\r\n                        <Divider />\r\n                    </Grid>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h6\"  >\r\n                                Direcciones\r\n\t\t\t\t\t\t    </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Fab color='secondary' size='small' className={classes.texto} aria-label='agregar' onClick={() => setDialogDireccion(true)}>\r\n                                <HomeOutlinedIcon />\r\n                            </Fab>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <List>\r\n                                {arrayDireccion.length > 0 ?\r\n                                    arrayDireccion.map((drc, index) => (\r\n                                        <ListItem key={index}>\r\n                                            <ListItemAvatar>\r\n                                                <DomainIcon color='secondary' />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={`${drc.direccion1}, ${drc.direccion2}`} secondary={`${drc.distrito}, ${drc.provincia}, ${drc.pais}`} />\r\n                                            <DeleteOutlineOutlinedIcon color='error' onClick={() => eliminarDireccion(index)} style={{ cursor: 'pointer' }} />\r\n                                        </ListItem>\r\n                                    ))\r\n                                    :\r\n                                    <ListItem>\r\n                                        <ListItemText primary='No hay números agregados' />\r\n                                    </ListItem>\r\n                                }\r\n                            </List>\r\n                            <Divider />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h6\"  >\r\n                                Teléfonos\r\n\t\t\t\t\t\t    </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                name='numero'\r\n                                value={telefonos.numero}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                label=\"Teléfono\"\r\n                                onChange={onChangeTelefonos}\r\n                                placeholder=\"Ingrese número de teléfono\"\r\n                                helperText='número de teléfono'\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                select\r\n                                className={classes.texto}\r\n                                name='tipo'\r\n                                value={telefonos.tipo}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                onChange={onChangeTelefonos}\r\n                                helperText='Tipo'\r\n                                type=\"text\"\r\n                            >\r\n                                <MenuItem value='personal'>Personal</MenuItem>\r\n                                <MenuItem value='trabajo'>Trabajo</MenuItem>\r\n                                <MenuItem value='fijo'>Fijo</MenuItem>\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Fab color='secondary' size='small' className={classes.texto} aria-label='agregar' onClick={() => agregarTelefono()}>\r\n                                <AddIcon />\r\n                            </Fab>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <List>\r\n                                {arrayTelefono.length > 0 ?\r\n                                    arrayTelefono.map((tlf, index) => (\r\n                                        <ListItem key={index}>\r\n                                            <ListItemAvatar>\r\n                                                <PhoneAndroidOutlinedIcon color='secondary' />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={tlf.numero} secondary={tlf.tipo} />\r\n                                            <CallOutlinedIcon color='primary' onClick={() => alert('llamando a ' + tlf.numero)} style={{ cursor: 'pointer' }} />\r\n                                            <DeleteOutlineOutlinedIcon color='error' onClick={() => eliminarTelefono(index)} style={{ cursor: 'pointer' }} />\r\n                                        </ListItem>\r\n                                    ))\r\n                                    :\r\n                                    <ListItem>\r\n                                        <ListItemText primary='No hay números agregados' />\r\n                                    </ListItem>\r\n                                }\r\n                            </List>\r\n                            <Divider />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h6\"  >\r\n                                Correos\r\n\t\t\t\t\t\t    </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                name='direccion'\r\n                                value={correos.direccion}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                label=\"Correo\"\r\n                                onChange={onChangeCorreos}\r\n                                placeholder=\"Ingrese dirección de correo\"\r\n                                helperText='Dirección de correo'\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                select\r\n                                className={classes.texto}\r\n                                name='tipo'\r\n                                value={correos.tipo}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                onChange={onChangeCorreos}\r\n                                helperText='Tipo'\r\n                                type=\"text\"\r\n                            >\r\n                                <MenuItem value='personal'>Personal</MenuItem>\r\n                                <MenuItem value='trabajo'>Trabajo</MenuItem>\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Fab color='secondary' size='small' className={classes.texto} aria-label='agregar' onClick={() => agregarCorreo()}>\r\n                                <AddIcon />\r\n                            </Fab>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <List>\r\n                                {arrayCorreo.length > 0 ?\r\n                                    arrayCorreo.map((crr, index) => (\r\n                                        <ListItem key={index}>\r\n                                            <ListItemAvatar>\r\n                                                <MailOutlineOutlinedIcon color='secondary' />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={crr.direccion} secondary={crr.tipo} />\r\n                                            <DeleteOutlineOutlinedIcon color='error' onClick={() => eliminarCorreo(index)} style={{ cursor: 'pointer' }} />\r\n                                        </ListItem>\r\n                                    ))\r\n                                    :\r\n                                    <ListItem>\r\n                                        <ListItemText primary='No hay correos agregados' />\r\n                                    </ListItem>\r\n                                }\r\n                            </List>\r\n                            <Divider />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h6\"  >\r\n                                Redes sociales\r\n\t\t\t\t\t\t    </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                name='nombre'\r\n                                value={redes.nombre}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                label=\"Red social\"\r\n                                onChange={onChangeRedes}\r\n                                placeholder=\"Ingrese red social\"\r\n                                helperText='Red social'\r\n                                type=\"text\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                select\r\n                                className={classes.texto}\r\n                                name='tipo'\r\n                                value={redes.tipo}\r\n                                margin='normal'\r\n                                fullWidth\r\n                                onChange={onChangeRedes}\r\n                                helperText='Tipo'\r\n                                type=\"text\"\r\n                            >\r\n                                <MenuItem value='facebook'>Facebook</MenuItem>\r\n                                <MenuItem value='instagram'>Instagram</MenuItem>\r\n                                <MenuItem value='twitter'>Twitter</MenuItem>\r\n                                <MenuItem value='linkedin'>Linkedin</MenuItem>\r\n                                <MenuItem value='youtube'>Youtube</MenuItem>\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Fab color='secondary' size='small' className={classes.texto} aria-label='agregar' onClick={() => agregarRedes()}>\r\n                                <AddIcon />\r\n                            </Fab>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <List>\r\n                                {arrayRedes.length > 0 ?\r\n                                    arrayRedes.map((red, index) => (\r\n                                        <ListItem key={index}>\r\n                                            <ListItemAvatar>\r\n                                                {red.tipo === 'instagram' ? <InstagramIcon color='error' /> :\r\n                                                    red.tipo === 'facebook' ? <FacebookIcon color='primary' /> :\r\n                                                        red.tipo === 'twitter' ? <TwitterIcon color='primary' /> :\r\n                                                            red.tipo === 'linkedin' ? <LinkedInIcon /> :\r\n                                                                red.tipo === 'youtube' ? <YouTubeIcon color='error' /> : ''}\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={red.nombre} secondary={red.tipo} />\r\n                                            <DeleteOutlineOutlinedIcon color='error' onClick={() => eliminarRedes(index)} style={{ cursor: 'pointer' }} />\r\n                                        </ListItem>\r\n                                    ))\r\n                                    :\r\n                                    <ListItem>\r\n                                        <ListItemText primary='No hay red social agregada' />\r\n                                    </ListItem>\r\n                                }\r\n                            </List>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n}"],"sourceRoot":""}