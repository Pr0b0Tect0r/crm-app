{"version":3,"sources":["Componentes/Chat/Chat.js"],"names":["useStyles","makeStyles","theme","root","width","marginTop","spacing","close","padding","appBar","position","title","marginLeft","flex","avatar","backgroundColor","palette","primary","main","linea","chatRight","display","justifyContent","me","margin","borderRadius","color","getContrastText","listame","them","secondary","listathem","textoMensaje","listaGeneral","top","overflow","maxHeight","grid","left","bottom","grid2","height","message","alignItems","avatarMensaje","marginRight","Transition","React","forwardRef","props","ref","direction","Chat","useState","friends","setFriends","friendisLoading","setFriendisLoading","selectedFriend","setSelectedFriend","selectedAvatar","setSelectedAvatar","selectedName","setSelectedName","selectedStatus","setSelectedStatus","chat","setChat","chatIsLoading","setChatIsLoading","dialogEvento","setDialogEvento","mensaje","setMensaje","notificacion","setNotificacion","infoNotificacion","setInfoNotificacion","classes","user","JSON","parse","localStorage","getItem","handleCloseDialogEvento","scrollBottom","node","document","getElementById","scrollHeight","scrollTop","clientHeight","useEffect","CometChat","UsersRequestBuilder","setLimit","build","fetchNext","then","userList","error","console","log","removeMessageListener","addCallListener","CallListener","onIncomingCallReceived","call","onOutgoingCallAccepted","sessionID","startCall","OngoingCallListener","onUserJoined","onUserLeft","onCallEnded","onOutgoingCallRejected","onIncomingCallCancelled","addMessageListener","MessageListener","onTextMessageReceived","sender","texto","text","nombre","uid","onMediaMessageReceived","mediaMessage","MessagesRequestBuilder","setUID","fetchPrevious","messages","prevState","Fragment","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","style","opacity","ContentProps","variant","className","src","alt","action","key","aria-label","onClick","fullScreen","TransitionComponent","edge","container","item","xs","id","map","mensajes","index","receiverId","in","timeout","elevation","sm","autoComplete","autoFocus","placeholder","required","fullWidth","onKeyDown","e","keyCode","textMessage","TextMessage","RECEIVER_TYPE","USER","MESSAGE_TYPE","TEXT","sendMessage","enviarMensaje","activeElement","value","onChange","target","type","lista","button","divider","name","status"],"mappings":"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","file":"static/js/20.20a5e273.chunk.js","sourcesContent":["import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { CometChat } from '@cometchat-pro/chat';\r\nimport Box from '@material-ui/core/Box';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\tmarginTop: theme.spacing(10)\r\n\t},\r\n\tclose: {\r\n\t\tpadding: theme.spacing(0.5)\r\n\t},\r\n\tappBar: {\r\n\t\tposition: 'fixed'\r\n\t},\r\n\ttitle: {\r\n\t\tmarginLeft: theme.spacing(2),\r\n\t\tflex: 1,\r\n\t},\r\n\tavatar: {\r\n\t\tbackgroundColor: theme.palette.primary.main\r\n\t},\r\n\tlinea: {\r\n\t\twidth: '105%'\r\n\t},\r\n\tchatRight: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end'\r\n\t},\r\n\tme: {\r\n\t\tbackgroundColor: theme.palette.primary.main,\r\n\t\tmargin: 4,\r\n\t\tborderRadius: '10px 10px 0 10px',\r\n\t\tcolor: theme.palette.getContrastText(theme.palette.primary.main)\r\n\t},\r\n\tlistame: {\r\n\t\tposition: 'flex',\r\n\t\tjustifyContent: 'flex-end'\r\n\t},\r\n\tthem: {\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t\tmargin: 4,\r\n\t\tborderRadius: '0 10px 10px 10px',\r\n\t\tcolor: theme.palette.getContrastText(theme.palette.secondary.main)\r\n\t},\r\n\tlistathem: {\r\n\t\tposition: 'flex',\r\n\t\tjustifyContent: 'flex-start'\r\n\t},\r\n\ttextoMensaje: {\r\n\t\t[`& fieldset`]: {\r\n\t\t\tborderRadius: 50,\r\n\t\t}\r\n\t},\r\n\tlistaGeneral: {\r\n\t\ttop: theme.spacing(7),\r\n\t\twidth: '100%',\r\n\t\tposition: 'fixed',\r\n\t\toverflow: 'auto',\r\n\t\tmaxHeight: '80%'\r\n\t},\r\n\tgrid: {\r\n\t\tposition: 'fixed',\r\n\t\tleft: theme.spacing(1),\r\n\t\tbottom: theme.spacing(4),\r\n\t\twidth: '100%'\r\n\t},\r\n\tgrid2: {\r\n\t\theight: '80%'\r\n\t},\r\n\tmessage: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center'\r\n\t},\r\n\tavatarMensaje: {\r\n\t\tmarginRight: theme.spacing(1)\r\n\t}\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n\treturn <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Chat() {\r\n\tconst [friends, setFriends] = React.useState([])\r\n\tconst [friendisLoading, setFriendisLoading] = React.useState(true)\r\n\tconst [selectedFriend, setSelectedFriend] = React.useState(null);\r\n\tconst [selectedAvatar, setSelectedAvatar] = React.useState(null);\r\n\tconst [selectedName, setSelectedName] = React.useState(null);\r\n\tconst [selectedStatus, setSelectedStatus] = React.useState(null)\r\n\tconst [chat, setChat] = React.useState([]);\r\n\tconst [chatIsLoading, setChatIsLoading] = React.useState(false)\r\n\tconst [dialogEvento, setDialogEvento] = React.useState(false)\r\n\tconst [mensaje, setMensaje] = React.useState(null)\r\n\tconst [notificacion, setNotificacion] = React.useState(false)\r\n\tconst [infoNotificacion, setInfoNotificacion] = React.useState({})\r\n\tconst MESSAGE_LISTENER_KEY = 'listener-key'\r\n\tconst listenerID = \"UNIQUE_LISTENER_ID\";\r\n\tconst limit = 30\r\n\tconst classes = useStyles()\r\n\tconst user = JSON.parse(localStorage.getItem('usuarioChat'))\r\n\r\n\r\n\tconst selectFriend = (uid, avatar, name, status) => {\r\n\t\tsetSelectedFriend(uid);\r\n\t\tsetSelectedAvatar(avatar);\r\n\t\tsetSelectedName(name);\r\n\t\tsetSelectedStatus(status);\r\n\t\tsetChatIsLoading(true);\r\n\t\tsetDialogEvento(true);\r\n\t}\r\n\r\n\tconst handleCloseDialogEvento = () => {\r\n\t\tsetDialogEvento(false);\r\n\t\tsetSelectedFriend(null);\r\n\t};\r\n\r\n\tconst enviarMensaje = () => {\r\n\t\tvar textMessage = new CometChat.TextMessage(selectedFriend, mensaje, CometChat.RECEIVER_TYPE.USER, CometChat.MESSAGE_TYPE.TEXT)\r\n\t\tCometChat.sendMessage(textMessage).then(\r\n\t\t\tmessage => {\r\n\t\t\t\tsetChat([...chat, message]);\r\n\t\t\t\tscrollBottom()\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.log('No se pudo enviar el mensaje:', error);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tconst tecla = (e) => {\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\tenviarMensaje()\r\n\t\t\tvar campo = document.activeElement\r\n\t\t\tcampo.value = ''\r\n\t\t}\r\n\t}\r\n\r\n\tconst scrollBottom = () => {\r\n\t\tvar node = document.getElementById(\"lista\");\r\n\t\tconst bottom = node.scrollHeight - node.scrollTop === node.clientHeight;\r\n\t\tif (!bottom) {\r\n\t\t\tnode.scrollTop = node.scrollHeight;\r\n\t\t}\r\n\t}\r\n\r\n\tReact.useEffect(() => {\r\n\t\tlet usersRequest = new CometChat.UsersRequestBuilder()\r\n\t\t\t.setLimit(limit)\r\n\t\t\t.build();\r\n\r\n\t\tusersRequest.fetchNext().then(\r\n\t\t\tuserList => {\r\n\t\t\t\tsetFriends(userList);\r\n\t\t\t\tsetFriendisLoading(false);\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.log('Error al recibir lista: ', error);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn () => {\r\n\t\t\tCometChat.removeMessageListener(MESSAGE_LISTENER_KEY);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tCometChat.addCallListener(\r\n\t\t\tlistenerID,\r\n\t\t\tnew CometChat.CallListener({\r\n\t\t\t\tonIncomingCallReceived(call) {\r\n\t\t\t\t\t// let llamadaEntrante = [call]\r\n\t\t\t\t\t// setSelectedAvatarEntrante(llamadaEntrante[0].callInitiator.avatar)\r\n\r\n\t\t\t\t\t// setModalLlamadaEntrante(!modalLlamadaEntrante)\r\n\t\t\t\t\t// sessionStorage.setItem('sessionIdLlamadaEntrante', JSON.stringify(llamadaEntrante[0].sessionId))\r\n\t\t\t\t},\r\n\r\n\t\t\t\tonOutgoingCallAccepted(call) {\r\n\t\t\t\t\tconsole.log(\"Llamada Saliente aceptada: \", call);\r\n\t\t\t\t\tlet sessionID = call.sessionID;\r\n\r\n\t\t\t\t\t// setModalLlamadaSaliente(false)\r\n\t\t\t\t\t// setModal(true)\r\n\r\n\t\t\t\t\tCometChat.startCall(sessionID, document.getElementById(\"callScreen\"),\r\n\t\t\t\t\t\tnew CometChat.OngoingCallListener({\r\n\t\t\t\t\t\t\tonUserJoined: user => {\r\n\r\n\t\t\t\t\t\t\t\t// console.log(\"El usuario se ha unido a la llamada: \", user);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tonUserLeft: user => {\r\n\t\t\t\t\t\t\t\t// setModal(false)\r\n\t\t\t\t\t\t\t\t// console.log(\"Usuario abandonó la Llamada: \", user);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tonCallEnded: call => {\r\n\r\n\t\t\t\t\t\t\t\t// console.log(\"LLamada Finalizada: \", call);\r\n\t\t\t\t\t\t\t\t// setModal(false)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tonOutgoingCallRejected(call) {\r\n\t\t\t\t\t// setModalLlamadaSaliente(false)\r\n\t\t\t\t\t// console.log(\"Llamada Saliente rechazada: \", call);\r\n\t\t\t\t},\r\n\t\t\t\tonIncomingCallCancelled(call) {\r\n\t\t\t\t\t// setModalLlamadaEntrante(false)\r\n\t\t\t\t\t// setModalLlamadaSaliente(false)\r\n\t\t\t\t\t// setModal(false)\r\n\t\t\t\t\t// console.log(\"Llamada entrante cancelada: \", call);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tCometChat.addMessageListener(listenerID,\r\n\t\t\tnew CometChat.MessageListener({\r\n\t\t\t\tonTextMessageReceived: message => {\r\n\t\t\t\t\tsetInfoNotificacion({ avatar: message.sender.avatar, texto: message.text, nombre: message.sender.uid })\r\n\t\t\t\t\tsetNotificacion(true)\r\n\t\t\t\t},\r\n\t\t\t\tonMediaMessageReceived: mediaMessage => {\r\n\t\t\t\t\t// console.log(\"Mensaje Multimedia recibido\", { mediaMessage });\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif (selectedFriend) {\r\n\t\t\tlet messagesRequest = new CometChat.MessagesRequestBuilder()\r\n\t\t\t\t.setUID(selectedFriend)\r\n\t\t\t\t.setLimit(limit)\r\n\t\t\t\t.build();\r\n\r\n\t\t\tmessagesRequest.fetchPrevious().then(\r\n\t\t\t\tmessages => {\r\n\t\t\t\t\tsetChat(messages);\r\n\t\t\t\t\tsetChatIsLoading(false);\r\n\t\t\t\t\tscrollBottom()\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\t// console.log('Error la recibir mensajes:', error);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tCometChat.removeMessageListener(MESSAGE_LISTENER_KEY);\r\n\r\n\r\n\r\n\t\t\tCometChat.addMessageListener(listenerID,\r\n\t\t\t\tnew CometChat.MessageListener({\r\n\t\t\t\t\tonTextMessageReceived: message => {\r\n\t\t\t\t\t\t// console.log('Mensaje Recibido dentro', { message });\r\n\t\t\t\t\t\tif (selectedFriend === message.sender.uid) {\r\n\t\t\t\t\t\t\t// let music = new Audio(Musica)\r\n\t\t\t\t\t\t\t// music.play()\r\n\t\t\t\t\t\t\tsetChat(prevState => [...prevState, message]);\r\n\t\t\t\t\t\t\tscrollBottom()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonMediaMessageReceived: mediaMessage => {\r\n\t\t\t\t\t\t// console.log(\"Mensaje Multimedia recibido\", { mediaMessage });\r\n\t\t\t\t\t\tif (selectedFriend === mediaMessage.sender.uid) {\r\n\t\t\t\t\t\t\tsetChat(prevState => [...prevState, mediaMessage]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}, [selectedFriend]);\r\n\r\n\tif (friendisLoading) {\r\n\t\treturn (\r\n\t\t\t<Box position=\"absolute\" top=\"50%\" left=\"50%\">\r\n\t\t\t\t<CircularProgress color='primary' />\r\n\t\t\t</Box>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\tanchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n\t\t\t\t\topen={notificacion}\r\n\t\t\t\t\tautoHideDuration={3000}\r\n\t\t\t\t\tonClose={() => setNotificacion(false)}\r\n\t\t\t\t\tstyle={{ opacity: '0.9' }}\r\n\t\t\t\t\tContentProps={{ 'aria-describedby': 'mensaje' }}\r\n\t\t\t\t\tmessage={<Typography variant='button' className={classes.message}>\r\n\t\t\t\t\t\t<Avatar src={infoNotificacion.avatar} alt='...' className={classes.avatarMensaje} />\r\n\t\t\t\t\t\t{infoNotificacion.texto}\r\n\t\t\t\t\t</Typography>}\r\n\t\t\t\t\taction={[\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tkey=\"close\"\r\n\t\t\t\t\t\t\taria-label=\"close\"\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\tclassName={classes.close}\r\n\t\t\t\t\t\t\tonClick={() => setNotificacion(false)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t\t</IconButton>,\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Dialog fullScreen open={dialogEvento} onClose={handleCloseDialogEvento} TransitionComponent={Transition}>\r\n\t\t\t\t\t<AppBar className={classes.appBar}>\r\n\t\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseDialogEvento} aria-label=\"cerrar\">\r\n\t\t\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<Avatar className={classes.avatar} src={selectedAvatar} />\r\n\t\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t\t\t\t{`${selectedName} - ${selectedStatus}`}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Toolbar>\r\n\t\t\t\t\t\t{chatIsLoading ?\r\n\t\t\t\t\t\t\t<LinearProgress color='secondary' className={classes.linea} />\r\n\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t</AppBar>\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<List className={classes.listaGeneral} id='lista'>\r\n\t\t\t\t\t\t\t\t{chatIsLoading ? null :\r\n\t\t\t\t\t\t\t\t\tchat.map((mensajes, index) => (\r\n\t\t\t\t\t\t\t\t\t\tmensajes.receiverId !== user.uid ?\r\n\t\t\t\t\t\t\t\t\t\t\t<Zoom in={true} timeout={500} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index} className={classes.listame}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper elevation={4} className={classes.me}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant='body1' style={{ padding: 6 }}>{mensajes.text}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar src={user.avatar} alt='...' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t</Zoom> :\r\n\t\t\t\t\t\t\t\t\t\t\t<Zoom in={true} timeout={500} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index} className={classes.listathem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar src={selectedAvatar} alt='...' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper elevation={4} className={classes.them}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant='body1' style={{ padding: 6 }}>{mensajes.text}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t</Zoom>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container spacing={2} className={classes.grid}>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tautoComplete=\"mensaje\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tclassName={classes.textoMensaje}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Escribe un mensaje...\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tonKeyDown={tecla}\r\n\t\t\t\t\t\t\t\tonChange={e => { setMensaje(e.target.value) }}\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Dialog>\r\n\t\t\t\t<Fade in={true} timeout={1000}>\r\n\t\t\t\t\t<Paper elevation={4} className={classes.root}>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t{friends.map((lista, index) => (\r\n\t\t\t\t\t\t\t\t<ListItem key={index} button divider={true} onClick={() => selectFriend(lista.uid, lista.avatar, lista.name, lista.status)}>\r\n\t\t\t\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar className={classes.avatar} src={lista.avatar} />\r\n\t\t\t\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary={lista.name} secondary={`${lista.uid} - ${lista.status}`} />\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Fade>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}"],"sourceRoot":""}